# -*- coding: utf-8 -*-
"""Actividad_Matrices.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v5ahe6tViyLzG-hYkOVRwxIzIAC9Cr7p
"""

import numpy as np
import matplotlib.pyplot as plt

N = 100
noise=2*np.random.random(N)-1
x1 = np.linspace(0, 10, N)+noise
y = 0.9*(x1 + noise)+2
plt.plot(x1,y,"ro")

col_1= np.ones((N,))
X= np.array([col_1,x1])
X_1= X.T

theta= np.linalg.inv(X@X_1)@X@y

N = 100
noise1=2*np.random.random(N)-1
noise2=2*np.random.random(N)-1
x1 = np.linspace(-1, 1, N)+ noise1
x2 = np.linspace(-2, 2, N)+ noise2

y = 2*(x1+0.1*noise) - 3*(x2+0.1*noise)
col_1= np.ones((N,))

X_2= np.array([col_1,x1,x2])
X_2T= X_2.T

theta2= np.linalg.inv(X_2@X_2T)@X_2@y # Luego de esto que hago?
theta2

YY = theta2@X_2T.T #Este es el conjunto de puntos y que me generan el plano para le regresion en dos dimensiones

YY

N = 100
x1 = np.linspace(-1, 1, N) 
x2 = np.linspace(-2, 2, N)
noise1=2*np.random.random(N)-1
noise2=2*np.random.random(N)-1
y = 2*(x1+noise1) - 3*(x2+noise2) + 0.0 # Se debe hacer el mismo proceso para encontrar el theta

N = 10
X1, X2 = np.meshgrid(x1,x2)
Y = 2*X1 - 3*X2 + 0.0
fig, ax = plt.subplots(subplot_kw={"projection": "3d"})
surf = ax.plot_surface(X1, X2, Y)
scatter = ax.scatter(x1, x2, y,"-")